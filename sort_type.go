// Code generated by "stringer -type TaskSortByType -trimprefix Sort -output sort_type.go"; DO NOT EDIT.

package todotxt

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[SortTaskIDAsc-1]
	_ = x[SortTaskIDDesc-2]
	_ = x[SortTodoTextAsc-3]
	_ = x[SortTodoTextDesc-4]
	_ = x[SortPriorityAsc-5]
	_ = x[SortPriorityDesc-6]
	_ = x[SortCreatedDateAsc-7]
	_ = x[SortCreatedDateDesc-8]
	_ = x[SortCompletedDateAsc-9]
	_ = x[SortCompletedDateDesc-10]
	_ = x[SortDueDateAsc-11]
	_ = x[SortDueDateDesc-12]
	_ = x[SortContextAsc-13]
	_ = x[SortContextDesc-14]
	_ = x[SortProjectAsc-15]
	_ = x[SortProjectDesc-16]
}

const _TaskSortByType_name = "TaskIDAscTaskIDDescTodoTextAscTodoTextDescPriorityAscPriorityDescCreatedDateAscCreatedDateDescCompletedDateAscCompletedDateDescDueDateAscDueDateDescContextAscContextDescProjectAscProjectDesc"

var _TaskSortByType_index = [...]uint8{0, 9, 19, 30, 42, 53, 65, 79, 94, 110, 127, 137, 148, 158, 169, 179, 190}

func (i TaskSortByType) String() string {
	i -= 1
	if i >= TaskSortByType(len(_TaskSortByType_index)-1) {
		return "TaskSortByType(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _TaskSortByType_name[_TaskSortByType_index[i]:_TaskSortByType_index[i+1]]
}
